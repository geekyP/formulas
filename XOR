
Assume that p1, p2, ...pn are Boolean variables, then, 
p1 (+) p2 (+) ... (+) pn is true if the number of variables with the value true is odd,
and is false if the number of variables with the value true is even.

Also, p1 (+) p2 (+) ... (+) pn == ( p1 + p2 + ... + pn ) % 2
XOR applied to a bunch of Boolean variables is the same as summing up all the variables' values (where true is 1 and false is 0), and dividing mod 2

Problem: swap two numbers without using extra space
Solution using XOR: let x = A and y = B
x = x ^ y
y = x ^ y
x = x ^ y

Solution using subtraction:
x = x - y
y = x + y
x = y - x


Problem: Given an array of size n-1 containing numbers in the range of 1 to n, no duplicates, find the missing number.
https://github.com/geekyP/algos/blob/master/src/com/problems/FindMissingNumber.java
Solution using XOR:
X1 = XOR all the numbers in the array
X2 = XOR all the numbers from 1 to n
missing number = X1 ^ X2
time complexity = O(n)

Solution using summation:
S1 = Sum all the numbers in the array
S2 = Sum all the numbers from 1 to n = n(n+1)/2
missing number = S2 - S1
time complexity = O(n)
can have integer overflow problem because of a large sum
